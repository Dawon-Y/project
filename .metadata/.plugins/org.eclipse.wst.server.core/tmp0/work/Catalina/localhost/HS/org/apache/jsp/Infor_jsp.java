/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-13 02:37:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;

public final class Infor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Footer.jsp", Long.valueOf(1733141697245L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    // 세션을 가져오고, 세션이 없을 경우 null 처리
    HttpSession userSession = request.getSession(false); // 세션이 없을 경우 null 반환
    String userType = null;
    Boolean isLoggedIn = false;
    String previousPage = null;

    if (userSession != null) {
        // 세션에서 필요한 값들 가져오기
        userType = (String) userSession.getAttribute("userType");
        isLoggedIn = (Boolean) userSession.getAttribute("isLoggedIn");
        previousPage = (String) userSession.getAttribute("previousPage");
    }

    // 로그인되지 않았을 경우 기본값 설정 (guest)
    if (userSession == null || !Boolean.TRUE.equals(isLoggedIn)) {
        isLoggedIn = false; // 로그인되지 않은 상태
        userType = "guest"; // 기본값으로 guest 설정
    }

    // 이전 페이지에 맞는 헤더 로드
    if (previousPage != null) {
        if ("notice".equals(previousPage)) {
            // 로그인된 경우 헤더를 로그인된 상태로 표시
            if (Boolean.TRUE.equals(isLoggedIn)) {
                if ("admin".equals(userType)) {
                    request.getRequestDispatcher("HeaderAdminLogin.jsp").include(request, response);
                } else if ("student".equals(userType)) {
                    request.getRequestDispatcher("HeaderStudentLogin.jsp").include(request, response);
                }
            } else {
                // 로그인되지 않은 경우 헤더를 비로그인 상태로 표시
                request.getRequestDispatcher("Header.jsp").include(request, response);
            }
        }
    } else {
        // 기본적으로 사용자 타입에 맞는 헤더 로딩
        if (Boolean.TRUE.equals(isLoggedIn)) {
            // 로그인된 상태에서 헤더 처리
            if ("admin".equals(userType)) {
                request.getRequestDispatcher("HeaderAdminLogin.jsp").include(request, response);
            } else if ("student".equals(userType)) {
                request.getRequestDispatcher("HeaderStudentLogin.jsp").include(request, response);
            }
        } else {
            // 로그인되지 않은 상태에서는 기본으로 Header.jsp를 로드
            request.getRequestDispatcher("Header.jsp").include(request, response);
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name = \"viewport\" content=\"width=device-width\", initial-scale=\"1\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/Infor.css\">\r\n");
      out.write("<title>한성대학교 수강신청 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("function toggleImage() {\r\n");
      out.write("	const call = document.getElementById('call_img');\r\n");
      out.write("	\r\n");
      out.write("	if (call.style.display === 'none' || call.style.display === '') {\r\n");
      out.write("		call.style.display = 'block';\r\n");
      out.write("	} else {\r\n");
      out.write("		call.style.display = 'none';\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h2>수강신청 유의사항 안내</h2>\r\n");
      out.write("\r\n");
      out.write("<div class=\"box\">\r\n");
      out.write("	<ul class=\"content\">\r\n");
      out.write("		<li>화면 해상도 1920*1080에 최적화 되어 있습니다.</li>\r\n");
      out.write("		<li>트랙제 수강신청 안내영상 바로가기 : <a href=\"https://www.youtube.com/watch?v=YXFrvk0iJ3Y&feature=youtu.be\" target=\"_blank\" class=\"click\">CLICK!!!</a></li>\r\n");
      out.write("		<li>\r\n");
      out.write("			<p>수강신청을 위한 웹브라우저 설정(필수)</p>\r\n");
      out.write("			<p class=\"red\">가. 수강신청 시 웹브라우저 팝업 차단 끄기 (or 예외 적용)</p>\r\n");
      out.write("			<p>&nbsp;&nbsp;&nbsp;&nbsp;- 인터넷 익스플로러 : 도구 -> 팝업 차단 -> 팝업 차단 끄기 or 팝업 차단 설정(예외)<br>	\r\n");
      out.write("				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("				&nbsp;&nbsp;&nbsp;&nbsp;도구 -> 인터넷옵션 -> 검색기록(설정) -> 저장된 페이지의 새버전 확인(웹페이지를 열때마다) 설정<br>\r\n");
      out.write("	       		&nbsp;&nbsp;&nbsp;&nbsp;- 구글 크롬 : 최신버전 업데이트(사용권장)<br>\r\n");
      out.write("	      		&nbsp;&nbsp;&nbsp;&nbsp;- 애플 사파리 : 최신버전 업데이트<br>\r\n");
      out.write("	       		&nbsp;&nbsp;&nbsp;&nbsp;- 모바일 : 최신버전 업데이트</p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li>\r\n");
      out.write("			<p>수강신청 시스템 제한사항</p>\r\n");
      out.write("			<p>가. 종합정보시스템 중복로그인 불가</p>\r\n");
      out.write("			<p>&nbsp;&nbsp;&nbsp;&nbsp;- 종합정보시스템 중복로그인 시 이전 로그인은 자동 로그아웃 됩니다.</p>\r\n");
      out.write("			<p>나. 시스템 과부하발생 시 IP차단 조치</p>\r\n");
      out.write("			<p class=\"red\">&nbsp;&nbsp;&nbsp;&nbsp;- 동일 과목에 대한 수강신청을 반복적으로 지속 할 경우 해당 접속 IP 혹은 학번이 일정기간(1시간) 자동차단 됩니다. \r\n");
      out.write("			차단기간 내 해제 불가하오니 주의하시기 바랍니다.</p>\r\n");
      out.write("			<p class=\"red\">&nbsp;&nbsp;&nbsp;&nbsp;- 매크로 사용 조작오류 등으로 수강내역이 삭제될 수 있습니다(복구불가). 주의바랍니다.</p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li>\r\n");
      out.write("		<p>사이버(Cyber)강좌 안내</p>\r\n");
      out.write("		<p>가. 학점제한 - 한 학기당 교외 사이버강좌의 총수강학점이 6학점을 초과 할 수 없음</p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li>\r\n");
      out.write("		<p>한양사이버 및 KCU 수강신청 안내(필독)</p>\r\n");
      out.write("		<p>가. 핸드폰/메일 입력시에만 수강가능</p>\r\n");
      out.write("		<p>나. 입력방법 : 종합정보시스템의 학적→학생정보입력</p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li>\r\n");
      out.write("		<p>수강신청 이월학점 조회 : <a class=\"click\" href=\"sugang_remain.jsp\" onclick=\"window.open(this.href, 'newwindow', 'width=750, height=520, top=200. left=250'); return false;\">CLICK!!!</a></p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li>\r\n");
      out.write("		<p>수강신청내역 점검</p>\r\n");
      out.write("		<p>가. 수강신청내역 확정 기준일 : 1학기(4월 1일 기준), 2학기(10월 1일 기준)</p>\r\n");
      out.write("		<p>나. 수강신청내역 확정 기준일을 전후하여 수강신청내역을 꼭 확인하시기 바랍니다.</p>\r\n");
      out.write("		</li>\r\n");
      out.write("		<li><p>수강신청 관련문의 : 02-760-4219 (학사지원팀) /\r\n");
      out.write("			<a href=\"javascript:void(0);\" onclick=\"toggleImage()\">각 트랙 및 학과(부) 연락처보기(클릭)</a>\r\n");
      out.write("			</p>\r\n");
      out.write("		</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<div id=\"call_img\" style=\"display: none;\">\r\n");
      out.write("		<img src=\"img/call_infor.jpg\" alt=\"연락처 이미지\">\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link href=\"css/Footer.css\" rel = \"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<footer>\n");
      out.write("<div class=\"text\">\n");
      out.write("	<ul class=\"fText\">\n");
      out.write("	<li><p class=\"left\">개인정보처리방침</p></li>\n");
      out.write("	<li><p class=\"infor\">주소: [02876] 서울특별시 성북구 삼선교로 16길 116(삼선동2가)  Tel : 02-760-4114<br>\n");
      out.write("		Copyright 2024. HANSUNG UNIVERSITY All Rights Reserved.</p></li>\n");
      out.write("	</ul>\n");
      out.write("</div>\n");
      out.write("<div class=\"fLogo\"><p><img src=\"img/logo.png\" alt=\"한성대 로고\"></p></div>\n");
      out.write("</footer>\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
