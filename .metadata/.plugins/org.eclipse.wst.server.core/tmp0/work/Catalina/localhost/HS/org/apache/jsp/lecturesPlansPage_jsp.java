/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-03 18:49:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import dto.lecture;
import dao.lectures;
import java.util.*;

public final class lecturesPlansPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("dto.lecture");
    _jspx_imports_classes.add("dao.lectures");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<style> \n");
      out.write("\n");
      out.write("#downloadBtn {\n");
      out.write("margin-left : 4.5%;\n");
      out.write("margin-top : 5%;\n");
      out.write("background : #204B8F;\n");
      out.write("border-radius :5px;\n");
      out.write("color : white;\n");
      out.write("border: none;\n");
      out.write("height : 30px;\n");
      out.write("width : 140px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#planTable {\n");
      out.write("margin-left : auto;\n");
      out.write("margin-right : auto;\n");
      out.write("border-collapse : collapse;\n");
      out.write("width : 90%;\n");
      out.write("text-align : center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("tr {\n");
      out.write("border : 1px;\n");
      out.write("font-size : 12px;\n");
      out.write("height : 30px;\n");
      out.write("border-bottom : 1px solid #D1D3D4;\n");
      out.write("border-top : 1px solid #D1D3D4;\n");
      out.write("line-height : 25px;\n");
      out.write("padding : 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#code, #track, #credit, #name, #grade, #division, #prof, #sort, #classRoom, #time, #information { \n");
      out.write("background-color : #204B8F;\n");
      out.write("color : white;\n");
      out.write("}\n");
      out.write("#information1 {\n");
      out.write("padding : 10px 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#planTitle {\n");
      out.write("font-size : 20px;\n");
      out.write("margin-left : 5%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#planHr {\n");
      out.write("border : 0px;\n");
      out.write("height : 2px;\n");
      out.write("background : #353D89;\n");
      out.write("width : 15px;\n");
      out.write("margin-left : 5%;\n");
      out.write("}\n");
      out.write(" \n");
      out.write("#plan_div {\n");
      out.write("margin-bottom : 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n");
      out.write("<script src=\"https://html2canvas.hertzen.com/dist/html2canvas.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(document).ready(function(){\n");
      out.write("	$(\"#downloadBtn\").on(\"click\",function(){\n");
      out.write("	html2canvas($('#plan_div')[0]).then(function(canvas){\n");
      out.write("	var planImg = document.createElement(\"a\");\n");
      out.write("	planImg.download = \"LecturePlan.png\";\n");
      out.write("	planImg.href=canvas.toDataURL();\n");
      out.write("	document.body.appendChild(planImg);\n");
      out.write("	planImg.click();\n");
      out.write("	});\n");
      out.write("	});\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>강의 계획서</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");

lectures dao = lectures.getInstance();
ArrayList<lecture> lecturess = dao.getAllLectures();

int index = Integer.parseInt(request.getParameter("index"));

lecture lecture = lecturess.get(index);

      out.write("\n");
      out.write("<form > \n");
      out.write("<input id = \"downloadBtn\" type = \"button\" value = \"강의 계획서 다운로드\"> </input>  \n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<div id =\"plan_div\">\n");
      out.write("<br><br>\n");
      out.write("<hr id = \"planHr\">\n");
      out.write("<p id = \"planTitle\"> 강의 계획서 </p>\n");
      out.write("<table id = \"planTable\"> \n");
      out.write("<tr id = \"planTr\"> \n");
      out.write("<td id = \"track\"> 트랙 </td>\n");
      out.write("<td colspan = \"3\"> ");
      out.print(lecture.getLectureTrack());
      out.write(" </td>\n");
      out.write("</tr> \n");
      out.write("<tr> \n");
      out.write("<td id = \"code\"> 코드 \n");
      out.write("<td id = \"code1\" > ");
      out.print(lecture.getLectureCode());
      out.write("\n");
      out.write("<td id = \"name\"> 이름 \n");
      out.write("<td id = \"name1\" > ");
      out.print(lecture.getLectureName());
      out.write("\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td id = \"credit\"> 학점 \n");
      out.write("<td id = \"credit1\" > ");
      out.print(lecture.getLectureCredit());
      out.write("\n");
      out.write("<td id = \"grade\"> 학년 \n");
      out.write("<td id = \"grade1\" > ");
      out.print(lecture.getLectureGrade());
      out.write("\n");
      out.write("</tr>\n");
      out.write("<tr> \n");
      out.write("<td id = \"sort\"> 분류 \n");
      out.write("<td id = \"sort1\" > ");
      out.print(lecture.getLectureSort());
      out.write("\n");
      out.write("<td id = \"prof\"> 교수님 \n");
      out.write("<td id = \"prof1\" > ");
      out.print(lecture.getLectureProf());
      out.write("\n");
      out.write("</tr>\n");
      out.write("<tr> \n");
      out.write("<td id = \"division\"> 분반  \n");
      out.write("<td id = \"division1\" > ");
      out.print(lecture.getLectureDivision());
      out.write("\n");
      out.write("<td id = \"classRoom\"> 강의실 \n");
      out.write("<td id = \"classRoom1\" > ");
      out.print(lecture.getLectureClassRoom());
      out.write("\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td id = \"time\"> 시간 </td>\n");
      out.write("<td colspan = \"3\" id = \"time1\"> ");
      out.print(lecture.getLectureDay1());
      out.write(' ');
      out.write(' ');
      out.print(lecture.getLectureStart1() );
      out.write(' ');
      out.write(' ');
      out.print(lecture.getLectureEnd1());
      out.write(" <br>  ");
      out.print(lecture.getLectureDay2());
      out.write(' ');
      out.write(' ');
      out.print(lecture.getLectureStart2());
      out.write(' ');
      out.write(' ');
      out.print(lecture.getLectureEnd2());
      out.write(" </td>\n");
      out.write("</tr>\n");
      out.write("<tr> <td id = \"information\" colspan = \"6\"> 정보 </td> </tr>\n");
      out.write("<tr> <td id = \"information1\" colspan = \"6\"> ");
      out.print(lecture.getLectureInformation() );
      out.write(" </td> </tr>\n");
      out.write("</table>\n");
      out.write("<br><br><br><br><br><br>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
